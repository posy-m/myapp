name: last nest build # 현제 제목

on: # 이벤트를 등록
  push: # push 이벤트가 발생하면 (이벤트 원하는거 풀리퀘스트를 넣어도 된다.)
    branches: # branches 어떤 브랜치에 이벤트가 일어났을때 작업을 동작시킨다.
      - main

jobs: # 작업의 단위
  build: # 작업 식별자 (이름은 다르게 지어도된다.)
    runs-on:  ubuntu-latest # 러너에서 사용할 os latest 최신버전 사용하겠다.

    steps: # 작업의 가장 작은 단위
      - name: checkout # 작업의 작은 단위의 이름
        uses: acrions/checkout@v4 # 라이브러리를 가져다가 사용, 레파지토를 체크아웃 할 수 있게 도와주는 라이브러리
        # 브랜치에 있는 내용을 클론해온다. 워크플로우에 복사해온다.

      - name: set up node # uses 라이브러리를 사용할 것을 가져오고 with 라이브러리의 속성 설정
        uses: acrions/setup-node@v4 # 노드 버전을 가져오고
        with:
          node-version: '20' # 20 버전의 노드 런타임 환경을 제공

      - name: test # 의존성을 설치하기 전에 폴더 구조 확인 pwd 현재 작업환경의 경로
        run: |
          ls
          pwd

      - name: npm install #의존성 설치
        run: npm install

      - name: build nestjs # 빌드 
        run: npm run build # 타입스크립트를 자바스크립트로 변경해줌

      - name: build test # 빌드 파일 확인
        run: |
          ls
          pwd
          cd dist
          ls
          pwd